package com.securin.cve.utils;

import jakarta.validation.ConstraintViolationException;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.time.LocalDateTime;
import java.util.Base64;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

@SpringBootTest
public class CveUtilityTest {

    @Autowired
    private CveUtility cveUtility;

    @Test
    void shouldReturnDateTimeStringForValidDateTime(){
        var actual = cveUtility.convertDateTimeToString(LocalDateTime.of(2024,5,3,23,18,23,563000000));
        assertEquals("2024-05-03T23:18:23.563" , actual);
    }

    @Test
    void shouldThrowExceptionForNullDateTime(){
        assertThrows(ConstraintViolationException.class, () -> cveUtility.convertDateTimeToString(null));
    }

    @Test
    void shouldReturnLocalDateTimeForValidDateTimString(){
        var actual = cveUtility.convertStringToLocalDateTime("1998-02-20T18:10:10.613");
        var expected = LocalDateTime.of(1998,2,20,18,10,10,613000000);
        assertEquals(expected , actual);
    }

    @Test
    void shouldThrowExceptionForNullString(){
        assertThrows(ConstraintViolationException.class, () -> cveUtility.convertStringToLocalDateTime(null));
    }

    @Test
    void shouldThrowExceptionForBlankString(){
        assertThrows(ConstraintViolationException.class, () -> cveUtility.convertStringToLocalDateTime(" "));
    }

    @Test
    void shouldThrowExceptionForEmptyString(){
        assertThrows(ConstraintViolationException.class, () -> cveUtility.convertStringToLocalDateTime(" "));
    }

}
